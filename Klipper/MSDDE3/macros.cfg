[gcode_macro START_PRINT]
description: Prepare to print
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
  # Preheat bed
  M140 S{BED_TEMP}
  # Use absolute coordinates
  G90
  # Reset the G-Code Z offset (adjust Z offset if needed)
  SET_GCODE_OFFSET Z=0.0
  # Home the printer
  G28
  # Preheat extruder, wait for bed to reach temperature, extruder to stand-by
  M104 S100
  M190 S{BED_TEMP}
  M104 S180
  BED_MESH_CALIBRATE
  SMART_PARK
  # Set and wait for nozzle to reach temperature
  M109 S{EXTRUDER_TEMP}
  # Beep beep, time to print
  M300 P1
  LINE_PURGE

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 E-2 F2700
    G1 X-2 Y-2 E-2 F300
    # Raise nozzle
    G1 Z20 F3000
    G90
    # Present print
    G1 X0 Y210 F3000
    # Disable steppers
    M84

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 10.0) %}
      {% set z_safe = 10.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
  M106 S0


[gcode_macro M300]
description: Beeper macro
gcode:
  SET_PIN PIN=beeper VALUE=1
  G4 P{params.P|default(150)|int}
  SET_PIN PIN=beeper VALUE=0
[gcode_macro BEEP]
gcode:
  M300 P100
[gcode_macro BEEP_TWICE]
gcode:
  M300 P100
  M300 P100
[gcode_macro BEEP_LONG]
gcode:
  M300 P500